{"ast":null,"code":"import { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport counterReducer from '../reducers/counterReducer';\nvar rootReducer = combineReducers({\n  counterReducer: counterReducer\n});\nvar preloadedState = window.__PRELOADED_STATE__;\ndelete window.__PRELOADED_STATE__;\nvar store = configureStore(preloadedState); // const store = configureStore({\n//   reducer: rootReducer,\n//   //   middleware: new MiddlewareArray().concat(logger),\n//   devTools: true,\n// });\n\nexport var useAppDispatch = function useAppDispatch() {\n  return useDispatch();\n};\nexport default store;","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/Razzle-boiler-plate-typescript/src/client/_redux/app/store.ts"],"names":["combineReducers","configureStore","useDispatch","counterReducer","rootReducer","preloadedState","window","__PRELOADED_STATE__","store","useAppDispatch"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,cAA1B,QAAiE,kBAAjE;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AAOA,IAAMC,WAAW,GAAGJ,eAAe,CAAC;AAClCG,EAAAA,cAAc,EAAdA;AADkC,CAAD,CAAnC;AAIA,IAAME,cAAc,GAAGC,MAAM,CAACC,mBAA9B;AAEA,OAAOD,MAAM,CAACC,mBAAd;AACA,IAAMC,KAAK,GAAGP,cAAc,CAACI,cAAD,CAA5B,C,CAEA;AACA;AACA;AACA;AACA;;AAIA,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAMP,WAAW,EAAjB;AAAA,CAAvB;AACP,eAAeM,KAAf","sourcesContent":["import { combineReducers, configureStore, MiddlewareArray } from '@reduxjs/toolkit';\nimport { useDispatch } from 'react-redux';\nimport counterReducer from '../reducers/counterReducer';\n\ndeclare global {\n  interface Window {\n    __PRELOADED_STATE__?: RootState;\n  }\n}\nconst rootReducer = combineReducers({\n  counterReducer,\n});\n\nconst preloadedState = window.__PRELOADED_STATE__;\n\ndelete window.__PRELOADED_STATE__;\nconst store = configureStore(preloadedState);\n\n// const store = configureStore({\n//   reducer: rootReducer,\n//   //   middleware: new MiddlewareArray().concat(logger),\n//   devTools: true,\n// });\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport type AppDispatch = typeof store.dispatch;\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport default store;\n"]},"metadata":{},"sourceType":"module"}