{"ast":null,"code":"import { createAsyncThunk } from '@reduxjs/toolkit';\nexport const countCalc = createAsyncThunk('count/increment', async ({\n  count\n}, {\n  rejectWithValue\n}) => {\n  try {\n    return count + 1;\n  } catch (error) {\n    return rejectWithValue(error.message);\n  }\n});","map":{"version":3,"sources":["C:/Users/moate/OneDrive/Desktop/Tests/Razzle-boiler-plate-typescript/src/client/actions/counterAction.ts"],"names":["createAsyncThunk","countCalc","count","rejectWithValue","error","message"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,kBAAjC;AAEA,OAAO,MAAMC,SAAS,GAAGD,gBAAgB,CACvC,iBADuC,EAEvC,OAAO;AAAEE,EAAAA;AAAF,CAAP,EAAuB;AAAEC,EAAAA;AAAF,CAAvB,KAA+C;AAC7C,MAAI;AACF,WAAOD,KAAK,GAAG,CAAf;AACD,GAFD,CAEE,OAAOE,KAAP,EAAc;AACd,WAAOD,eAAe,CAACC,KAAK,CAACC,OAAP,CAAtB;AACD;AACF,CARsC,CAAlC","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit';\n\nexport const countCalc = createAsyncThunk(\n  'count/increment',\n  async ({ count }: any, { rejectWithValue }) => {\n    try {\n      return count + 1;\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n"]},"metadata":{},"sourceType":"module"}